/*
 * IamBackoffice Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import GeminiCommerce_Iambackoffice.ApiException;
import org.openapitools.client.model.IambackofficeAssignRolesRequest;
import org.openapitools.client.model.IambackofficeAssignRolesResponse;
import org.openapitools.client.model.IambackofficeAssignUserToGroupRequest;
import org.openapitools.client.model.IambackofficeCreateGroupRequest;
import org.openapitools.client.model.IambackofficeCreateGroupResponse;
import org.openapitools.client.model.IambackofficeDisableUserMfaRequest;
import org.openapitools.client.model.IambackofficeEnableUserMfaRequest;
import org.openapitools.client.model.IambackofficeGenerateSecretForQRResponse;
import org.openapitools.client.model.IambackofficeGetUserRequest;
import org.openapitools.client.model.IambackofficeGetUserResponse;
import org.openapitools.client.model.IambackofficeLoginMfaRequest;
import org.openapitools.client.model.IambackofficeLoginRequest;
import org.openapitools.client.model.IambackofficeLoginResponse;
import org.openapitools.client.model.IambackofficeLogoutRequest;
import org.openapitools.client.model.IambackofficeLogoutResponse;
import org.openapitools.client.model.IambackofficeRegistrationRequest;
import org.openapitools.client.model.IambackofficeRegistrationResponse;
import org.openapitools.client.model.IambackofficeSearchGroupsRequest;
import org.openapitools.client.model.IambackofficeSearchGroupsResponse;
import org.openapitools.client.model.IambackofficeUnassignRolesRequest;
import org.openapitools.client.model.IambackofficeUnassignRolesResponse;
import org.openapitools.client.model.IambackofficeUserMfaResponse;
import org.openapitools.client.model.RpcStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IamBackofficeApi
 */
@Disabled
public class IamBackofficeApiTest {

    private final IamBackofficeApi api = new IamBackofficeApi();

    /**
     * AUTHZ
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iamBackofficeAssignRolesTest() throws ApiException {
        IambackofficeAssignRolesRequest body = null;
        IambackofficeAssignRolesResponse response = api.iamBackofficeAssignRoles(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iamBackofficeAssignUserToGroupTest() throws ApiException {
        IambackofficeAssignUserToGroupRequest body = null;
        Object response = api.iamBackofficeAssignUserToGroup(body);
        // TODO: test validations
    }

    /**
     * GROUPS
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iamBackofficeCreateGroupTest() throws ApiException {
        IambackofficeCreateGroupRequest body = null;
        IambackofficeCreateGroupResponse response = api.iamBackofficeCreateGroup(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iamBackofficeDisableUserMfaTest() throws ApiException {
        IambackofficeDisableUserMfaRequest body = null;
        IambackofficeUserMfaResponse response = api.iamBackofficeDisableUserMfa(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iamBackofficeEnableUserMfaTest() throws ApiException {
        IambackofficeEnableUserMfaRequest body = null;
        IambackofficeUserMfaResponse response = api.iamBackofficeEnableUserMfa(body);
        // TODO: test validations
    }

    /**
     * MFA
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iamBackofficeGenerateSecretForQRTest() throws ApiException {
        Object body = null;
        IambackofficeGenerateSecretForQRResponse response = api.iamBackofficeGenerateSecretForQR(body);
        // TODO: test validations
    }

    /**
     * USER
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iamBackofficeGetUserTest() throws ApiException {
        IambackofficeGetUserRequest body = null;
        IambackofficeGetUserResponse response = api.iamBackofficeGetUser(body);
        // TODO: test validations
    }

    /**
     * LOGIN
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iamBackofficeLoginTest() throws ApiException {
        IambackofficeLoginRequest body = null;
        IambackofficeLoginResponse response = api.iamBackofficeLogin(body);
        // TODO: test validations
    }

    /**
     * LOGIN MFA
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iamBackofficeLoginMfaTest() throws ApiException {
        IambackofficeLoginMfaRequest body = null;
        IambackofficeLoginResponse response = api.iamBackofficeLoginMfa(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iamBackofficeLogoutTest() throws ApiException {
        IambackofficeLogoutRequest body = null;
        IambackofficeLogoutResponse response = api.iamBackofficeLogout(body);
        // TODO: test validations
    }

    /**
     * REGISTRATION
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iamBackofficeRegisterTest() throws ApiException {
        IambackofficeRegistrationRequest body = null;
        IambackofficeRegistrationResponse response = api.iamBackofficeRegister(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iamBackofficeSearchGroupsTest() throws ApiException {
        IambackofficeSearchGroupsRequest body = null;
        IambackofficeSearchGroupsResponse response = api.iamBackofficeSearchGroups(body);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iamBackofficeUnassignRolesTest() throws ApiException {
        IambackofficeUnassignRolesRequest body = null;
        IambackofficeUnassignRolesResponse response = api.iamBackofficeUnassignRoles(body);
        // TODO: test validations
    }

}
